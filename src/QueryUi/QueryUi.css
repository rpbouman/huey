.queryUi {
  display: flex;
  flex-direction: column;
  padding-left: 4px;
  padding-right: 2px;
  user-select: none;
}

/**
* Prevent Query UI events when the pivot table is busy:
*/
.workarea:has( > .pivotTableUiContainer[aria-busy=true] ) > .queryUi {
  pointer-events: none;
}

.queryUi section,
.queryUi menu,
.queryUi ol,
.queryUi li {
  margin-block: 0px;
  margin-inline: 0px;
  padding-inline: 0px;
}

/* query ui axis */
.queryUi > section {
  display: flex;
  flex-direction: row;
  margin-top: 1px;
  min-height: 26px;
}

.queryUi > section:last-child {
  margin-bottom: 1px;
}

.queryUi > section > header {
  display: flex;
  flex-direction: row;
}

.queryUi > section > header > label {
  width: 24px;
}

/* query ui axis label */
.queryUi > section > header > h1 {
  font-size: 1em;
  font-weight: normal;
  display: inline-block;
  width: 64px;
  margin-block: 0px;
}

.queryUi > section > header > h1:after {
  content: ':';
}

.queryUi label > button,
.queryUi label > input[type=checkbox] {
  display: none;
}

.queryUi label:has( > input[type=checkbox] )::after,
.queryUi label:has( > button )::after {
  width: 24px;
  font-family: var( --huey-icon-font-family ) !important;
  font-size: var( --huey-icon-medium );
  color: var( --huey-icon-color-subtle );
}
.queryUi label:has( > input[type=checkbox] ):hover::after,
.queryUi label:has( > button ):hover::after {
  color: var( --huey-icon-color-highlight );
}

.queryUi > section:has( > ol:empty ) > header > label,
.queryUi > section:has( > ol:empty ) > footer > label {
  pointer-events: none;
}

/* Columns axis header icon */
.queryUi > section[data-axis=filters] > header > label:has( > button )::after {
  /* filter */
  content: "\eaa5";
}

/* Columns axis header icon */
.queryUi > section[data-axis=columns] > header > label:has( > button )::after {
  /* table-row */
  content: "\fb00";
}
/* axis icon is a button to flip the non-cells axes */
.queryUi > section[data-axis=columns] > header > label:has( > button ):hover::after {
  /* table-column */
  content: "\faff";
}

/* Rows axis header icon */
.queryUi > section[data-axis=rows] > header > label:has( > button )::after {
  /* table-column */
  content: "\faff";
}
/* axis icon is a button to flip the non-cells axes */
.queryUi > section[data-axis=rows] > header > label:has( > button ):hover::after {
  /* table-row */
  content: "\fb00";
}

/* Cells axis header icon */
.queryUi > section[data-axis=cells] > header > label:has( > button )::after {
  content: "\edba";
}

.queryUi[data-cellheadersaxis=columns] > section[data-axis=cells] > header > label:has( > button ):hover::after {
  /* table-column */
  content: "\faff";
}
.queryUi[data-cellheadersaxis=rows] > section[data-axis=cells] > header > label:has( > button ):hover::after {
  /* table-row */
  content: "\fb00";
}

.queryUi > section > footer > label {
  display: inline-block;
  width: 20px;
  padding-left: 4px;
}

.queryUi > section > footer > label:has( > button )::after {
  /* trash */
  content: "\eb41";
}

/* query ui axis items */
.queryUi > section > ol {
  flex-grow: 1;
  list-style-type: none;
  margin: 0px;
  padding: 0px;
  display: inline-block;

  border-color: var( --huey-light-border-color );
  background-color: var( --huey-light-background-color );
  border-style: solid;
  border-width: 1px;
  border-radius: 15px;
}

/* query ui axis item */

.queryUi > section > ol > li {
  border-color: var( --huey-light-border-color );
  background-color: var( --huey-medium-background-color );
  white-space: nowrap;
  display: inline-block;
  border-style: solid;
  border-width: 1px;
  border-radius: 15px;
  margin: 1px 0px 1px 1px;
  vertical-align: top;
}

.queryUi > section > ol > li > details {
  display: inline-block
}

.queryUi > section > ol > li > details > ol {
}

.queryUi > section > ol > li > details > ol > li {
  list-style-type: none;
  margin-left: .1em;
}

/* label holding the item caption */
.queryUi > section > ol > li > details > summary > span,
.queryUi > section > ol > li > span {
  margin-left: -6px;
}

.queryUi > section > ol > li > details:has( > ol > li )> summary > span {
  margin-left: 0px;
}

.queryUi > section > ol > li[data-derivation] > span:before,
.queryUi > section > ol > li[data-aggregator] > span:before {
  width: 20px;
  font-family: var( --huey-icon-font-family ) !important;
  font-size: var( --huey-icon-medium );
  color: var( --huey-icon-color );
  vertical-align: -15%;
  display: inline-block;
}

/**
*
* Derivation icons
*
*/
.queryUi > section > ol > li[data-derivation=iso-date] > span:before {
  /* calendar */
  content: "\ea53";
}

.queryUi > section > ol > li[data-derivation=year] > span:before {
  /* letter-y */
  content: "\ec68";
}

.queryUi > section > ol > li[data-derivation=quarter] > span:before {
  /* letter q */
  content: "\ec60";
}
.queryUi > section > ol > li[data-derivation="month name"] > span:before,
.queryUi > section > ol > li[data-derivation="month num"] > span:before {
  /* letter m */
  content: "\ec5c";
}

.queryUi > section > ol > li[data-derivation="week num"] > span:before {
  /* calendar-week */
  content: "\fd30";
}

.queryUi > section > ol > li[data-derivation="day of year"] > span:before {
  /* letter-d */
  content: "\ec53";
}

.queryUi > section > ol > li[data-derivation="day of month"] > span:before {
  /* calendar-month */
  content: "\fd2f";
}

.queryUi > section > ol > li[data-derivation="day of week name"] > span:before,
.queryUi > section > ol > li[data-derivation="day of week"] > span:before {
  /* letter-d-small */
  content: "\fcca";
}

.queryUi > section > ol > li[data-derivation="iso-time"] > span:before {
  /* clock */
  content: "\ea70";
}

.queryUi > section > ol > li[data-derivation=hour] > span:before {
  /* letter-h */
  content: "\ec57";
}

.queryUi > section > ol > li[data-derivation=minute] > span:before {
  /* letter-m-small */
  content: "\fcd3";
}

.queryUi > section > ol > li[data-derivation=second] > span:before {
  /* letter-s */
  content: "\ec62";
}

/**
*
* Aggregator icons
*
*/
.queryUi > section > ol > li[data-aggregator="count if true"] > span:before,
.queryUi > section > ol > li[data-aggregator="count if false"] > span:before,
.queryUi > section > ol > li[data-aggregator=count] > span:before {
  /* tallymarks */
  content: "\ec4a";
}

.queryUi > section > ol > li[data-aggregator="distinct count"] > span:before {
  /* tallymark-4 */
  content: "\ec49";
}

.queryUi > section > ol > li[data-aggregator=max] > span:before {
  /* math-max */
  content: "\f0f5";
}

.queryUi > section > ol > li[data-aggregator=min] > span:before {
  /* math-min */
  content: "\f0f6";
}

.queryUi > section > ol > li[data-aggregator=list] > span:before {
  /* list */
  content: "\eb6b";
}

.queryUi > section > ol > li[data-aggregator="distinct list"] > span:before {
  /* list details */
  content: "\ef40";
}

.queryUi > section > ol > li[data-aggregator=sum] > span:before {
  /* sum */
  content: "\eb73";
}

.queryUi > section > ol > li[data-aggregator=geomean] > span:before,
.queryUi > section > ol > li[data-aggregator=avg] > span:before {
  /* math-avg */
  content: "\f0f4";
}

.queryUi > section > ol > li[data-aggregator=mad] > span:before,
.queryUi > section > ol > li[data-aggregator=median] > span:before {
  /* calculator */
  content: "\eb80";
}

.queryUi > section > ol > li[data-aggregator=mode] > span:before {
  /* calculator */
  content: "\eb80";
}

.queryUi > section > ol > li[data-aggregator=stdev] > span:before {
  /* calculator */
  content: "\eb80";
}

.queryUi > section > ol > li[data-aggregator=variance] > span:before {
  /* calculator */
  content: "\eb80";
}

.queryUi > section > ol > li[data-aggregator=entropy] > span:before {
  /* calculator */
  content: "\eb80";
}

.queryUi > section > ol > li[data-aggregator=kurtosis] > span:before {
  /* calculator */
  content: "\eb80";
}

.queryUi > section > ol > li[data-aggregator=skewness] > span:before {
  /* calculator */
  content: "\eb80";
}

.queryUi > section > ol > li[data-aggregator=or] > span:before {
  /* logical-or */
  content: "\f245";
}

.queryUi > section > ol > li[data-aggregator=and] > span:before {
  /* logical-and*/
  content: "\f240";
}

/* buttons to move the item */
.queryUi > section > ol > li > label:first-child:has( > button )::after {
  /* chevron left */
  content: "\ea60";
  vertical-align: top;
}

.queryUi > section > ol > li > label:last-child:has( > button )::after {
  /* chevron right */
  content: "\ea61";
  vertical-align: top;
}

.queryUi > section > ol > li:first-child > label:first-child:has( > button )::after {
  visibility: hidden;  
  display: none;
}

/* label holding the item caption */
.queryUi > section > ol > li:first-child > details,
.queryUi > section > ol > li:first-child > span {
  margin-left: 8px;
}


.queryUi > section > ol > li:last-child > label:last-child:has( > button )::after {
  visibility: hidden;  
  display: none;
}

/* label holding the item caption */
.queryUi > section > ol > li:last-child > menu {
  margin-right: 6px;
}

/* axis item actions */
.queryUi > section > ol > li > menu {
  display: inline-block;
  vertical-align: top;
  margin: 0px;
}

/*  */
.queryUi > section[data-axis=rows] > ol > li > menu > label:nth-child(1):has( > input[type=checkbox] )::after,
.queryUi > section[data-axis=columns] > ol > li > menu > label:nth-child(1):has( > input[type=checkbox] )::after {
  /* abacus */
  content: "\f05c";
}

/*  */
.queryUi > section[data-axis=rows] > ol > li > menu > label:nth-child(1):has( > input[type=checkbox]:checked )::after,
.queryUi > section[data-axis=columns] > ol > li > menu > label:nth-child(1):has( > input[type=checkbox]:checked )::after {
  color: var( --huey-icon-highlight );
}


/* axis item action to move item to other axis */
.queryUi > section[data-axis=rows] > ol > li > menu > label:nth-child(2):has( > button )::after {
  /* table-row */
  content: "\fb00";
}

.queryUi > section[data-axis=columns] > ol > li > menu > label:nth-child(2):has( > button )::after {
  /* table-column */
  content: "\faff";
}

/* axis item action to remove item from axis */
.queryUi > section > ol > li > menu > label:nth-child(3):has( > button )::after {
  /* trash */
  content: "\eb41";
}

/* filter with no items does not have expandable element */
.queryUi > section[data-axis=filters] > ol > li > details:has( > ol:empty ) > summary {
  list-style: none;
}

.queryUi > section[data-axis=filters] > ol > li > details > summary::marker {
  
}


/* Filter axis item filter icon */
.queryUi > section[data-axis=filters] > ol > li:has( > details > ol > li ) > menu > label:nth-child(1):has( > button )::after {
  color: var( --huey-icon-highlight );
}

.queryUi > section[data-axis=filters] > ol > li > menu > label:nth-child(1):has( > button )::after {
  /* filter check */
  content: "\fb7e";
}

.queryUi > section[data-axis=filters] > ol > li[data-filterType^=not] > menu > label:nth-child(1):has( > button )::after {
  /* filter exclamation */
  content: "\fb82";
}

.queryUi > section[data-axis=filters] > ol > li > menu > label:nth-child(2):has( > button )::after {
  /* trash */
  content: "\eb41";
}
